@model IEnumerable<WebSite.Models.DashBoardView>

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron" style="margin-top:25px;">

    @{ int i = 0; string chartScript = String.Empty;}

    @if (Model.Count() == 0)
    {

        <div class="no-projects">
            <div>@Resources.Resource.NO_PROJECTS_YET</div>
        </div>

    }
    else {

        foreach (var sprint in Model)
        {

            <div class="row item_@i">
                <div class="col-md-8">
                    <h3>
                        @Html.ActionLink(sprint.SprintName, "Index", "Sprint", new { id = sprint.SprintId }, null)
                        ( @Html.ActionLink(sprint.ProjectName, "FilterProjectsByName", "Project", new { id = sprint.ProjectName }, null) )
                    </h3>
                    <ul class="nav nav-pills">

                        @if (sprint.EndDate < DateTime.Now)
                        {
                            <li class='counter-head label-danger'>
                                <h5>X</h5>
                                <div>past</div>
                                <div>due</div>
                            </li>
                        }
                        else
                        {
                            <li class='counter-head label-primary'>
                                <h5>@Convert.ToInt32((sprint.EndDate.AddDays(1) - @DateTime.Now).TotalDays) </h5>
                                <div>@Resources.Resource.Days</div>
                                <div>@Resources.Resource.Left</div>
                            </li>
                        }
                        <li class="counter-head label-warning">
                            <h5>@sprint.IssueList.Where(x => x.State.Name == "Open").Count()<br></h5>
                            <div>@Resources.Resource.Task</div>
                            <div>@Resources.Resource.Left</div>
                        </li>

                        <li class="counter-head label-info">
                            <h5>@sprint.IssueList.Where(x => x.State.Name == "In Progress").Count()<br></h5>
                            <div>@Resources.Resource.Task</div>
                            <div>@Resources.Resource.InProgress</div>
                        </li>

                        <li class="counter-head label-success">
                            <h5>@sprint.IssueList.Where(x => x.State.Name == "Fixed").Count()<br></h5>
                            <div>@Resources.Resource.Task</div>
                            <div>@Resources.Resource.Done</div>
                        </li>
                    </ul>
                    <a href="#" onclick="drawBurnDownChart('@sprint.SprintId')" style="font-size:0.9em">@Resources.Resource.SPRINT_DETAILS</a>
                </div>
                <div class="col-md-4">
                    <div class="char_@i chart-item"></div>
                </div>
                <hr />
            </div>
            i = i + 1;
        }
        <div id="curve_chart"></div>


        <div id="myModalBox" class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">

                        <h4 class="modal-title">Burndown chart</h4>
                    </div>
                    <div class="modal-body">
                        <div class="loading-div">
                            <img src="~/Content/images/loading.gif" />
                        </div>
                        <div id="burndownChart"></div>                      
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
                    </div>
                </div>
            </div>
        </div>


        @section scripts{

            <script src="https://code.highcharts.com/highcharts.js"></script>
            <script src="https://code.highcharts.com/modules/exporting.js"></script>

            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
            <script type="text/javascript">

                function ShowBlockChart(num) {
                    $(".item_" + num).find(".open").removeClass("open").addClass("closed");
                    $(".item_" + num).find(".totalCharts").removeClass("closed").addClass("open");
                    drawBurnDownChart();
                }

            

                // Load the Visualization API and the piechart package.
                google.charts.load('current', { 'packages': ['corechart', 'line'] });
                google.charts.setOnLoadCallback(drawChart);

                // Callback that creates and populates a data table,
                // instantiates the pie chart, passes in the data and
                // draws it.
                function drawChart() {

                    var chrtPlaceholders = document.getElementsByClassName("chart-item");

                    for (var i = 0; i < chrtPlaceholders.length; i++) {

                        var open = $(".item_" + i).find(".label-warning").find("h5").text() / 1;
                        var inProgress = $(".item_" + i).find(".label-info").find("h5").text() / 1;
                        var closed = $(".item_" + i).find(".label-success").find("h5").text() / 1;

                        var data = google.visualization.arrayToDataTable([
                ["Element", "Density", { role: "style" }],
                ["@Resources.Resource.Open", open, "#f39c12"],
                ["@Resources.Resource.InProgress", inProgress, "3498db"],
                ["@Resources.Resource.Done", closed, "00bc8c"],
                        ]);

                        var view = new google.visualization.DataView(data);
                        view.setColumns([0, 1,
                                         {
                                             calc: "stringify",
                                             sourceColumn: 1,
                                             type: "string",
                                             role: "annotation"
                                         },
                                         2]);

                        var options = {

                            hAxis: {
                                textStyle: { color: 'white' },
                            },

                            color: "#fff",
                            legend: { position: 'none' },
                            backgroundColor: 'transparent',
                            bar: { groupWidth: "95%" },
                            legend: { position: "none" },
                        };
                        var chart = new google.visualization.ColumnChart(document.getElementsByClassName('char_' + i)[0]);
                        chart.draw(view, options);
                    }
                }
            </script>


            <script>

                function drawBurnDownChart(num) {

                    $("#myModalBox").modal('show');

                    var idealArray = new Array();
                    var tasksArray = new Array();

                    $.ajax({
                        method: "POST",
                        url: '@Url.Action("GetChartInfo","Home")',
                        data: { sprintId: num }
                    })
                        .success(function(e){

                        $('#myModalBox .loading-div').addClass("hidden");
                        $('#burndownChart').removeClass("hidden");

                        $('#burndownChart').highcharts({
                         
                            chart: {
                                backgroundColor: "#303030",
                           
                            },
                            colors: ['#e83939', '#7cb5ec'],
                            xAxis: {
                                categories: e.SprintDates,
                                style: {
                                    color: "#fff"
                                }
                            },
                            yAxis: {
                                title: {
                                    text: 'Tasks',
                                    style: {
                                        color: "#fff"
                                    }
                                },
                                plotLines: [{
                                    value: 0,
                                    width: 1,
                                    color: '#fff'
                                }]
                            },
                        
                            legend: {
                                layout: 'horizontal',
                                align: 'center',
                                verticalAlign: 'bottom',
                                borderWidth: 0,
                                itemStyle: {
                                    "color": "#fff",
                                    "cursor": "default",
                                    "fontWeight": "normal",
                                }
                            },
                            navigation:{
                                buttonOptions: {
                                    enabled: "false"
                                }
                            },
                            series: [{
                                name: 'Ideal effort',
                                data: e.IdealTasks,
                                style: {
                                    color: "#fff"
                                }
                            }, {
                                name: 'Actual effort',
                                data: e.ActualTasks,
                                style: {
                                    color: "#fff"
                                }
                            }]
                        });
                    });

                }

                $('#myModalBox').on('hidden.bs.modal', function () {
                    $('#myModalBox .loading-div').removeClass("hidden");
                    $("#burndownChart").html("");
                })

            </script>
        }
    }
</div>